name: Build, Test, Analyze, and Push Docker Image

on:
    push:
        branches:
            - main

jobs:
    build-test-analyze:
        runs-on: ubuntu-latest

        services:
            postgres:
                image: postgres:latest
                ports:
                    - 5432:5432
                env:
                    POSTGRES_DB: gestion_examens
                    POSTGRES_USER: geb_spring_app
                    POSTGRES_PASSWORD: 340$Uuxwp7Mcxo7Khy
                options: >-
                    --health-cmd="pg_isready -U geb_spring_app -d gestion_examens"
                    --health-interval=10s
                    --health-timeout=5s
                    --health-retries=5

        steps:
            -   name: Checkout code
                uses: actions/checkout@v3

            -   name: Set up JDK 21
                uses: actions/setup-java@v3
                with:
                    java-version: '21'
                    distribution: 'temurin'

            -   name: Wait for PostgreSQL
                run: |
                    until pg_isready -h localhost -p 5432 -U geb_spring_app; do
                      echo "Waiting for PostgreSQL to be ready..."
                      sleep 5
                    done

            -   name: Build and Test
                run: mvn clean verify

            -   name: Analyze with SonarQube
                run: |
                    mvn sonar:sonar \
                    -Dsonar.projectKey=gestion-examens \
                    -Dsonar.host.url=https://6de4-41-227-188-64.ngrok-free.app \
                    -Dsonar.token=sqa_3d83f1f6a7c9add5aa9358884c8f6bccabd1b861

            -   name: Upload build artifacts
                uses: actions/upload-artifact@v3
                with:
                    name: build-artifacts
                    path: target/*.jar

    docker-build-and-push:
        name: Build and Push Docker Images
        runs-on: ubuntu-latest
        needs: build-test-analyze
        permissions:
            packages: write
            contents: read
            attestations: write
            id-token: write

        steps:
            -   name: Check out the repo
                uses: actions/checkout@v3

            -   name: Download build artifacts
                uses: actions/download-artifact@v3
                with:
                    name: build-artifacts
                    path: target/

            -   name: Extract version from JAR file
                id: extract-version
                run: |
                    jarFile=$(ls target/*.jar)
                    echo "Found JAR file: $jarFile"
                    version=$(echo "$jarFile" | sed -n 's/.*-\(.*\)\.jar/\1/p')
                    echo "Extracted version: $version"
                    echo "VERSION=$version" >> $GITHUB_ENV

            -   name: Log in to Docker Hub
                uses: docker/login-action@v2
                with:
                    username: ${{ secrets.DOCKER_USERNAME }}
                    password: ${{ secrets.DOCKER_PASSWORD }}

            -   name: Log in to GitHub Container Registry
                uses: docker/login-action@v2
                with:
                    registry: ghcr.io
                    username: ${{ github.actor }}
                    password: ${{ secrets.GITHUB_TOKEN }}

            -   name: Extract metadata (tags, labels) for Docker
                id: meta
                uses: docker/metadata-action@v4
                with:
                    images: |
                        ${{ secrets.DOCKER_USERNAME }}/gestion-examens
                        ghcr.io/${{ github.repository_owner }}/gestion-examens
                    tags: |
                        ${{ env.VERSION }}
                        latest

            -   name: Build and push Docker images
                id: push
                uses: docker/build-push-action@v5
                with:
                    context: .
                    push: true
                    tags: ${{ steps.meta.outputs.tags }}
                    labels: ${{ steps.meta.outputs.labels }}

            -   name: Generate artifact attestation
                uses: actions/attest-build-provenance@v1
                with:
                    subject-name: ghcr.io/${{ github.repository_owner }}/gestion-examens
                    subject-digest: ${{ steps.push.outputs.digest }}
                    push-to-registry: true